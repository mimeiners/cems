# Introduction and Survey

## Course Objectives

-   Interfacing Microsystems
    -   Mixed-technology systems (System-on-Chip, SoC)
    -   System analysis
    -   System specification
-   Design Methodology
    -   Seamlessly modeling and design over all physical domains
-   PCB (System) and IC Design
    -   Architecture
    -   Partitioning
    -   Layout

## Scientific Computing

-   [Python (Anaconda)](https://www.anaconda.com/download/)

-   [Matlab (Campus Lizenz)](https://de.mathworks.com/academia/tah-portal/hochschule-bremen-31463273.html)

-   [Command-line tools](https://jeroenjanssens.com/seven/)

## EDA Tools

-   PCB / System Design
    -   [LTspice](https://www.analog.com/en/design-center/design-tools-and-calculators/ltspice-simulator.html)
    -   [KiCad EDA](https://www.kicad.org/)
    -   [Altium Designer](https://www.altium.com/de/altium-designer)
    -   [SiemensEDA PCB tools](https://eda.sw.siemens.com/en-US/pcb/products/)
    -   [cadence System Design & Analysis](https://www.cadence.com/en_US/home/tools/system-design-and-analysis.html)
-   IC / Silicon Design
    -   [IIC-OSIC-TOOLS (open-source)](https://github.com/iic-jku/IIC-OSIC-TOOLS)
    -   [SiemensEDA IC tools](https://eda.sw.siemens.com/en-US/ic/products/)
    -   [cadence IC Design & Verification](https://www.cadence.com/en_US/home/tools/design-excellence.html)
    -   [synopsys silicon design (IC)](https://www.synopsys.com/silicon-design.html)

## OS-Tools

-   [Microsoft-Terminal](https://github.com/microsoft/terminal)

-   [Microsoft-PowerShell](https://learn.microsoft.com/de-de/powershell/scripting/learn/ps101/01-getting-started)

-   [MacOS-Terminal](https://iterm2.com)

-   [Linux/MacOS Shell zsh-tools](https://ohmyz.sh),

-   [git (Versionskontrolle)](https://git-scm.com)

## Code Editors

-   [Visual Studio Code](https://code.visualstudio.com)

-   [Spyder IDE](https://www.spyder-ide.org)

-   [Thonny (Micro-)Python IDE](https://thonny.org)

-   [Emacs](https://www.gnu.org/software/emacs/)

-   [Vim](https://www.vim.org)

## Data Science

- Journaled File System

	- Directories
	- Files
  
- Rectangular Data
	
	- Comma-Separated-Values (CSV), Tab-Separated-Values (TSV)
	- [csvkit: A suite of utilities for converting to and working with CSV, the king of tabular file
      formats.](https://github.com/wireservice/csvkit)
	- [miller: Miller is like awk, sed, cut, join, and sort for name-indexed data such as CSV, TSV, and tabular JSON]
      (https://github.com/wireservice/csvkit)
	- Spreadsheet (.xlsx, .ods)
	- [apache/iceberg: Apache Iceberg](https://github.com/apache/iceberg?tab=readme-ov-file)
	- [apache/iceberg-python: Apache PyIceberg](https://github.com/apache/iceberg-python)
  
- [Serialisation](https://en.wikipedia.org/wiki/Serialization)
  
    - [Data Serialization â€” The Hitchhiker's Guide to Python](https://docs.python-guide.org/scenarios/serialization/)
	- [JSON](https://www.json.org/json-en.html)
	- [MessagePack: It's like JSON. but fast and small.](https://msgpack.org/)

- Data Frames

	-   [Mastering Python Dictionaries: Efficient Data Storage and Retrieval - Adventures in Machine
        Learning](https://www.adventuresinmachinelearning.com/mastering-python-dictionaries-efficient-data-storage-and-retrieval/) 
	-   [MAT-File Versions - MATLAB & Simulink - MathWorks
        Deutschland](https://de.mathworks.com/help/matlab/import_export/mat-file-versions.html) 
	-   [HDF5 Or How I Learned To Love Data Compression And Partial
        I/O](https://www.hdfgroup.org/2018/06/15/hdf5-or-how-i-learned-to-love-data-compression-and-partial-i-o/) 
	-   [What is Apache Parquet?](https://www.databricks.com/de/glossary/what-is-parquet)
	-   [Feather File Format](https://arrow.apache.org/docs/python/feather.html)
	-   [pola-rs/polars: Dataframes powered by a multithreaded, vectorized query engine](https://github.com/pola-rs/polars)
	-   [ibis-project/ibis: Portable Python dataframe library](https://github.com/ibis-project/ibis)

- Embedded [Databases](https://db-engines.com)

    - [SQL](https://en.wikipedia.org/wiki/SQL), z.B. [SQlite](https://en.wikipedia.org/wiki/SQLite)
    - [OLAP](https://en.wikipedia.org/wiki/Online_analytical_processing), z.B. [DuckDB](https://duckdb.org/why_duckdb)


## Publish Computational Content

- [quarto](https://quarto.org)
    - [Manuscripts](https://quarto.org/docs/manuscripts/)

- [Jupyter-Book](https://jupyterbook.org/en/stable/intro.html)


## Are you writing or TeXing?

-   [MikTeX (Windows, MacOS, Linux)](https://miktex.org/)

-   [MacTeX (MacOS)](https://www.tug.org/mactex/)

-   [TeXLive (Linux)](http://tug.org/texlive/)

## LaTeX Editors

-   IDE's
    -   [TeXStudio](http://www.texstudio.org)
    -   [TeXMaker](http://www.xm1math.net/texmaker/)
-   Collaborative Frameworks
    -   [Overleaf, Online LaTeX](https://www.overleaf.com/)
    -   [CoCalc - Online LaTeX](https://cocalc.com/doc/latex-editor.html)

## Bibliography and LaTeX

-   [Citavi im Detail \> Titel exportieren \> Export nach BibTeX](https://www1.citavi.com/sub/manual5/de/exporting_to_bibtex.html)

-   [RefWorks - Library Guide Univ. Melbourne](https://unimelb.libguides.com/c.php?g=565734&p=3912294)

-   [Benutzerdefinierte BibTex-Keys mit Zotero \| nerdpause](https://nerdpause.de/benutzerdefinierte-bibtex-keys-mit-zotero/)

-   [JabRef - Library Guide Univ. Melbourne](https://unimelb.libguides.com/c.php?g=565734&p=3897117)

-   [EndNote - Library Guide Univ. Melbourne](https://unimelb.libguides.com/latexbibtex/endnote)

## Model-Based Systems Engineering (MBSE) of an Inertial Sensor System and IC Design

This winter term, the defining idea of the CEMS course is a modular board-level sensor system consisting of ADXL335 accelerometer,
ADS1115 ADC and ESP8266 NodeMCU. The ADC module has to be replaced by a custom IC design.

```{mermaid}
%%| label: fig-system
%%| fig-cap: "Modular board-level sensor system."
flowchart LR
	A(ADXL335) --> B(ADS1115)
	B --> C(ESP8266)
	C --> D{Measurement}
	D --> E(Thonny Micropython)
	D --> F(Arduino IDE C)
```

-   System level, behavioural model

    -   Matlab/Simulink,
    -   Python

-   PCB level

    -   [ESP8266 NodeMCU](https://randomnerdtutorials.com/getting-started-with-esp8266-wifi-transceiver-review/),
    -   [TIs ADS1115](https://www.ti.com/product/ADS1115),
    -   [ADs ADXL335](https://www.analog.com/en/products/adxl335.html)

-   IC level, SPICE with behavioural blocks, e.g. OTA and comparator

	- [IIC-OSIC-TOOLS IHP130-based analog and digital chip design](https://github.com/iic-jku/IIC-OSIC-TOOLS)
	
	
-   **Final Oral Exam/Project Presentation**

## Course Prerequisites

-   Fundamentals of linux operating systems

-   Fundamentals of microelectronics

    -   Device physics and models
    -   Transistor level analog circuits, elementary gain stages

-   Fundamentals of analog circuit design

    -   Operational amplifier
    -   Active filter design
    -   Noise analysis
    -   Switched-capacitor techniques

-   Prior exposure to SPICE, Matlab, Python or equivalent.
